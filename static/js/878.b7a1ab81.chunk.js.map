{"version":3,"file":"static/js/878.b7a1ab81.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Form, Field } from 'formik';\r\n\r\nexport const MainForm = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  background-color: #abdbe3;\r\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.22), 0px 2px 2px rgba(0, 0, 0, 0.24),\r\n    0px 2px 1px rgba(0, 0, 0, 0.32);\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  border: 0;\r\n  outline: 0;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  background-color: #e8f2f6;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  line-height: 30px;\r\n  box-shadow: inset 2px 2px 5px, inset -5px -5px 10px white;\r\n  transition: all 0.2s ease-in-out;\r\n  appearance: none;\r\n  &:focus {\r\n    box-shadow: inset 1px 1px 2px var(--color-shadow),\r\n      inset -1px -1px 2px var(--color-white);\r\n  }\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const AddButton = styled.button`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n  width: 300 px;\r\n  padding: 15px 20px;\r\n  background-color: #3086b2;\r\n  color: dark blue;\r\n  border-radius: 10px;\r\n  border-width: 0 0 4px;\r\n  box-sizing: border-box;\r\n  transition: cubic-bezier(0.17, 0.67, 0.57, 0.48);\r\n  cursor: pointer;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #1e81b0;\r\n    box-shadow: rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset,\r\n      rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset,\r\n      rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset,\r\n      rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px,\r\n      rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px,\r\n      rgba(0, 0, 0, 0.09) 0px 32px 16px;\r\n  }\r\n`;\r\nexport const Container = styled.div`\r\n  padding: 20px 20px;\r\n  display: block;\r\n  margin-top: 50px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 380px;\r\n  border-radius: 10px;\r\n  background-color: #abdbe3;\r\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.22), 0px 2px 2px rgba(0, 0, 0, 0.24),\r\n    0px 2px 1px rgba(0, 0, 0, 0.32);\r\n`;\r\nexport const TitlePhoneBook = styled.h1`\r\n  width: 240 px;\r\n  font-size: 38px;\r\n  font-weight: 600;\r\n  margin-bottom: 10px;\r\n  color: #0a3044;\r\n  text-shadow: 1px 1px 1px #e8f2f6;\r\n`;\r\n\r\nexport const TitleContacts = styled.h2`\r\n  width: 240 px;\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n  margin-bottom: 10px;\r\n  margin-top: 28px;\r\n  color: #0a3044;\r\n  text-shadow: 1px 1px 1px #e8f2f6;\r\n`;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { addContacts } from 'redux/operations';\r\nimport { selectContacts } from 'redux/selectors';\r\nimport { Formik } from 'formik';\r\nimport { MainForm, AddButton, FormLabel, Input } from './ContactForm.styled';\r\n\r\nexport const ContactForm = () => {\r\n  const contacts = useSelector(selectContacts);\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    if (\r\n      contacts.items.some(\r\n        contact =>\r\n          contact.name.toLowerCase() === values.name.toLowerCase().trim()\r\n      )\r\n    ) {\r\n      window.alert('Such a contact exists');\r\n    }\r\n    if (\r\n      !contacts.items.some(\r\n        contact =>\r\n          contact.name.toLowerCase() === values.name.toLowerCase().trim()\r\n      )\r\n    ) {\r\n      dispatch(addContacts(values));\r\n      window.alert('Contact created');\r\n    }\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <Formik initialValues={{ name: '', number: '' }} onSubmit={handleSubmit}>\r\n      <MainForm autoComplete=\"off\">\r\n        <div>\r\n          <FormLabel htmlFor=\"name\">Name</FormLabel>\r\n          <div>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <FormLabel htmlFor=\"number\">Number</FormLabel>\r\n          <div>\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <AddButton type=\"submit\">Add contact</AddButton>\r\n      </MainForm>\r\n    </Formik>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const DelButton = styled.button`\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  padding: 5px 10px;\r\n  background-color: #abdbe3;\r\n  color: black;\r\n  border-radius: 10px;\r\n  border-width: 0 0 4px;\r\n  box-sizing: border-box;\r\n  transition: cubic-bezier (.17,.67,.57,.48);\r\n  cursor: pointer;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #a91937;\r\n   box-shadow: rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px;\r\n  }\r\n`;\r\n","import { Item, DelButton } from './ContactItem.styled';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteContact } from 'redux/operations';\r\nexport const ContactItem = ({ id, name, number }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Item>\r\n      <span>{name}:</span>\r\n      <span>{number}</span>\r\n      <DelButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>\r\n        Delete\r\n      </DelButton>\r\n    </Item>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const List = styled.ol`\r\n  padding: 20px;\r\n  overflow-y: hidden;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  border-radius: 5px;\r\n  background-color: #5ea1c3;\r\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.22), 0px 2px 2px rgba(0, 0, 0, 0.24),\r\n    0px 2px 1px rgba(0, 0, 0, 0.32);\r\n`;","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectContacts, selectFilter } from 'redux/selectors';\r\nimport { ContactItem } from '../ContactItem/ContactItem';\r\nimport { List } from './ContactList.styled';\r\nimport { useEffect } from 'react';\r\nimport { fetchContacts } from 'redux/operations';\r\n\r\nconst filteredList = (contacts, filter) => {\r\n  let filterContactsList = null;\r\n  if (filter === '') {\r\n    filterContactsList = contacts;\r\n    return filterContactsList;\r\n  }\r\n  const normalizedFilter = filter.toLowerCase();\r\n  filterContactsList = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n  if (filterContactsList.length < 1) {\r\n    window.alert('No matches =(');\r\n  }\r\n  return filterContactsList;\r\n};\r\nexport const ContactList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { items } = useSelector(selectContacts);\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n  const filter = useSelector(selectFilter);\r\n  const filterContacts = filteredList(items, filter.filter);\r\n  return (\r\n    <List>\r\n      {filterContacts.map(state => {\r\n        return (\r\n          <ContactItem\r\n            key={state.id}\r\n            name={state.name}\r\n            id={state.id}\r\n            number={state.number}\r\n          />\r\n        );\r\n      })}{' '}\r\n    </List>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const FilterBox = styled.div`\r\n  width: 240px;\r\n  margin-bottom: 20px;\r\n  \r\n`;\r\n\r\nexport const FilterInput = styled.input`\r\n  border: 0;\r\n  outline: 0;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  background-color: #e8f2f6;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  box-shadow: inset 2px 2px 5px,\r\n    inset -5px -5px 10px white;\r\n  transition: all 0.2s ease-in-out;\r\n  appearance: none;\r\n  &:focus {\r\n    box-shadow: inset 1px 1px 2px var(--color-shadow),\r\n      inset -1px -1px 2px var(--color-white);\r\n  }\r\n`;","import { useDispatch } from 'react-redux';\r\nimport { addFilter } from 'redux/filterSlice';\r\nimport { FilterBox, FilterInput } from './ContactFilter.styled';\r\nimport { FormLabel } from '../ContactForm/ContactForm.styled';\r\n\r\nexport const ContactFilter = () => {\r\n  const dispatch = useDispatch();\r\n  const onFilter = e => {\r\n    dispatch(addFilter(e.currentTarget.value));\r\n  };\r\n  return (\r\n    <FilterBox>\r\n      <FormLabel htmlFor=\"filter\">Find contacts by name</FormLabel>\r\n      <div>\r\n        <FilterInput type=\"text\" name=\"filter\" onChange={onFilter} />\r\n      </div>\r\n    </FilterBox>\r\n  );\r\n};\r\n","import { ContactForm } from './../../components/ContactForm/ContactForm';\r\nimport { ContactList } from './../../components/ContactList/ContactList';\r\nimport { ContactFilter } from './../../components/ContactFilter/ContactFilter';\r\nimport { Container, TitlePhoneBook, TitleContacts } from 'components/AppStyled';\r\n\r\nexport default function Contacts() {\r\n  return (\r\n    <Container>\r\n      <TitlePhoneBook>Phonebook</TitlePhoneBook>\r\n      <ContactForm />\r\n      <TitleContacts>Contacts</TitleContacts>\r\n      <ContactFilter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}"],"names":["MainForm","styled","Form","Input","Field","FormLabel","AddButton","TitlePhoneBook","ContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","initialValues","name","number","onSubmit","values","resetForm","items","some","contact","toLowerCase","trim","window","alert","addContacts","autoComplete","htmlFor","type","pattern","title","required","Item","DelButton","ContactItem","id","onClick","deleteContact","List","ContactList","useEffect","fetchContacts","filterContacts","filter","filterContactsList","normalizedFilter","includes","length","filteredList","selectFilter","map","state","FilterBox","FilterInput","ContactFilter","onChange","e","addFilter","currentTarget","value","Contacts"],"sourceRoot":""}